{"version":3,"sources":["elements/TextInput.tsx","components/SearchInput.tsx","elements/Logo.tsx","elements/Button.tsx","components/WatchListBtn.tsx","views/Home.tsx","axios.ts","components/MovieCard.tsx","components/MoviesContainer.tsx","views/Search.tsx","AppContext.tsx","views/Movie.tsx","views/WatchList.tsx","routs.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["styled","input","props","theme","secondaryColor","Input","TextInput","attrs","placeholder","inHeader","Root","div","SearchInput","useState","initialInputValue","text","setText","history","useHistory","onSubmit","event","preventDefault","push","onChange","target","value","required","type","className","style","fontSize","margin","span","primaryColor","button","Button","ButtonElem","WatchListBtn","to","Logo","LogoElm","ButtonBar","Home","axios","create","baseURL","params","apikey","Poster","Info","Text","variant","MovieCard","poster","title","year","src","maxWidth","MoviesContainer","movies","isLoading","Spinner","animation","map","movie","index","key","Title","Type","Year","Search","match","useRouteMatch","setMovies","setIsLoading","page","setPage","searchedMovie","LoadMovies","a","get","s","response","data","_movies","filter","length","console","log","scrollHandler","debounce","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prev","useEffect","onscroll","actions","initialState","localStorage","getItem","JSON","parse","watchList","AppContextState","React","createContext","AppContextDispatcher","appReducer","state","action","_state","setItem","stringify","AppContextProvider","useReducer","dispatch","Provider","children","useAppContext","useContext","MovieContainer","MainInfoContainer","Row","Movie","setMovie","appState","appDispatch","t","plot","isInWatchList","Boolean","find","m","Object","keys","Runtime","Released","Country","Genre","Plot","onClick","Routs","exact","path","component","WathList","render","Header","location","useLocation","pathname","App","Container","fluid","hostname","ReactDOM","StrictMode","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e96be8b7.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { themeType } from '../theme';\r\n\r\ntype InputType = {\r\n\ttheme: themeType;\r\n};\r\n\r\nexport default styled.input<InputType>`\r\n\tcolor: inherit;\r\n\tborder: none;\r\n\tborder-bottom: 1px solid ${(props): string => props.theme.secondaryColor};\r\n\toutline: none;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TextInput from '../elements/TextInput';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype InputType = { variant?: string; inHeader?: boolean };\r\nconst Input = styled(TextInput).attrs({\r\n\tplaceholder: 'type a name...',\r\n})<InputType>`\r\n\twidth: ${(props): string => (props.inHeader ? '400px' : '600px')};\r\n\theight: ${(props): string => (props.inHeader ? '40px' : '60px')};\r\n\tfont-size: ${(props): string => (props.inHeader ? '1.2em' : '1.7em')};\r\n\tpadding: 3px 7px;\r\n`;\r\n\r\nconst Root = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\ntype Types = {\r\n\tinitialInputValue?: string;\r\n\tinHeader?: boolean;\r\n};\r\n\r\nconst SearchInput: React.FC<Types> = (props) => {\r\n\tconst [text, setText] = useState<string>(props.initialInputValue ?? '');\r\n\tconst history = useHistory();\r\n\r\n\tconst handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(`/search/${text}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>): void => setText(event.target.value)}\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tinHeader={props.inHeader}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t<i className=\"fas fa-search\" style={{ fontSize: '27px', margin: 'auto 10px' } as object}></i>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</Root>\r\n\t);\r\n};\r\n\r\nexport default SearchInput;\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.span`\r\n\tfont-size: 25px;\r\n\tfont-family: 'Anton', sans-serif;\r\n\tcolor: ${(props): string => props.theme.primaryColor};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.button<{ primary?: string }>`\r\n\tbackground: ${(props): string => props.theme.primaryColor ?? 'white'};\r\n\twidth: 200px;\r\n\theight: 40px;\r\n\tborder-radius: 3px;\r\n\tborder: none;\r\n\tcolor: white;\r\n`;\r\n","import React from 'react';\r\nimport ButtonElem from '../elements/Button';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Button = styled(ButtonElem)`\r\n\tbackground-color: inherit;\r\n\tcolor: inherit;\r\n\tborder: 1px solid ${(props): string => props.theme.secondaryColor};\r\n\topacity: 1;\r\n\tfont-size: 20px;\r\n`;\r\n\r\nconst WatchListBtn: React.FC = () => {\r\n\treturn (\r\n\t\t<Link to=\"/watchlist\">\r\n\t\t\t<Button>\r\n\t\t\t\t<i className=\"fas fa-film\"></i> Watchlist\r\n\t\t\t</Button>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default WatchListBtn;\r\n","import React from 'react';\r\nimport SearchInput from '../components/SearchInput';\r\nimport LogoElm from '../elements/Logo';\r\nimport styled from 'styled-components';\r\nimport WatchListBtn from '../components/WatchListBtn';\r\n\r\nconst Logo = styled(LogoElm)`\r\n\tfont-size: 50px;\r\n\tmargin-bottom: 10px;\r\n`;\r\n\r\nconst ButtonBar = styled.div`\r\n\tposition: absolute;\r\n\ttop: 10px;\r\n\tright: 15px;\r\n`;\r\n\r\nconst Home: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ 'margin-top': '150px' } as object}>\r\n\t\t\t\t<Logo>MOVIE SEARCHER</Logo>\r\n\t\t\t\t<SearchInput />\r\n\t\t\t</div>\r\n\t\t\t<ButtonBar>\r\n\t\t\t\t<WatchListBtn />\r\n\t\t\t</ButtonBar>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://www.omdbapi.com',\r\n\tparams: {\r\n\t\tapikey: 'c2574cd2',\r\n\t},\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { themeType } from '../theme';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype PropTypes = {\r\n\tposter: string;\r\n\ttitle: string;\r\n\ttype: string;\r\n\tyear: string;\r\n};\r\n\r\nconst Root = styled.div`\r\n\tposition: relative;\r\n\twidth: 200px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-top: 20px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n\twidth: 100%;\r\n\theight: 310px;\r\n\tborder-radius: 10px;\r\n\toverflow: hidden;\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n\twidth: 90%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst Text = styled.span<{ variant?: 'title' | 'category'; theme: themeType }>`\r\n\tfont-size: ${(props): string =>\r\n\t\tprops.variant === 'title' ? '1' : props.variant === 'category' ? '0.8' : '0.9'}rem;\r\n\tborder: ${(props): string => (props.variant === 'category' ? `1px solid ${props.theme.secondaryColor}` : '.9')};\r\n\tpadding: ${(props): string => (props.variant === 'category' ? `0px 5px` : '0px')};\r\n`;\r\n\r\nconst MovieCard: React.FC<PropTypes> = ({ poster, title, type, year }) => {\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<Link to={`/movie/${title}`}>\r\n\t\t\t\t<Poster>\r\n\t\t\t\t\t<img src={poster}></img>\r\n\t\t\t\t</Poster>\r\n\t\t\t</Link>\r\n\t\t\t<Link to={`/movie/${title}`} style={{ maxWidth: '100%' }}>\r\n\t\t\t\t<Text variant=\"title\">{title}</Text>\r\n\t\t\t</Link>\r\n\t\t\t<Info>\r\n\t\t\t\t<Text>{year}</Text>\r\n\t\t\t\t<Text variant=\"category\">{type}</Text>\r\n\t\t\t</Info>\r\n\t\t</Root>\r\n\t);\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Root = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: space-evenly;\r\n\tmargin-top: 10px;\r\n`;\r\n\r\nconst MoviesContainer: React.FC<{ movies: Array<any> | 'notFound'; isLoading?: boolean }> = ({\r\n\tmovies,\r\n\tisLoading = false,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Root>\r\n\t\t\t\t{movies === 'notFound' ? (\r\n\t\t\t\t\t<h2>Movie not found</h2>\r\n\t\t\t\t) : !isLoading ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{movies.map((movie: any, index) => (\r\n\t\t\t\t\t\t\t<MovieCard\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tposter={movie.Poster}\r\n\t\t\t\t\t\t\t\ttitle={movie.Title}\r\n\t\t\t\t\t\t\t\ttype={movie.Type}\r\n\t\t\t\t\t\t\t\tyear={movie.Year}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Spinner animation=\"border\" />\r\n\t\t\t\t)}\r\n\t\t\t</Root>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MoviesContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport MoivesContainer from '../components/MoviesContainer';\r\nimport debounce from 'lodash.debounce';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Search: React.FC = () => {\r\n\tconst match = useRouteMatch<{ movie: string }>();\r\n\tconst [movies, setMovies] = useState<Array<any> | 'notFound'>([]);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst [page, setPage] = useState<number>(1);\r\n\tconst searchedMovie = match.params.movie;\r\n\r\n\tconst LoadMovies = async (): Promise<any> => {\r\n\t\tif (page !== 0) {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get('', {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\ts: searchedMovie,\r\n\t\t\t\t\t\tpage,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\r\n\t\t\t\tif (response.data.Search) {\r\n\t\t\t\t\tconst _movies = response.data.Search.filter((movie: any) => movie.Poster !== 'N/A');\r\n\t\t\t\t\tif (movies.length > 0) {\r\n\t\t\t\t\t\tsetMovies([...(movies as Array<any>), ..._movies]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetMovies(_movies);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (page === 1) {\r\n\t\t\t\t\t\tsetMovies('notFound');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetPage(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch {\r\n\t\t\t\tconsole.log('An error occurred');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst scrollHandler = debounce(() => {\r\n\t\tif (window.innerHeight + document.documentElement.scrollTop + 1 > document.documentElement.offsetHeight) {\r\n\t\t\tsetPage((prev) => {\r\n\t\t\t\tconsole.log(prev);\r\n\t\t\t\treturn prev !== 0 ? prev + 10 : 0;\r\n\t\t\t});\r\n\t\t}\r\n\t}, 100);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.onscroll = scrollHandler;\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tLoadMovies();\r\n\t}, [page]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMovies([]);\r\n\t}, [searchedMovie]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (movies.length === 0) LoadMovies();\r\n\t}, [movies]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MoivesContainer movies={movies} />\r\n\t\t\t{isLoading && <Spinner style={{ 'margin-top': '50px' } as object} animation=\"border\" />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React, { useReducer, useContext } from 'react';\r\n\r\nconst actions = {\r\n\tADD_TO_WATCH_LIST: 'ADD_TO_WATCH_LIST',\r\n\tREMOVE_FROM_WARCH_LIST: 'REMOVE_FROM_WARCH_LIST',\r\n};\r\n\r\ntype StateType = {\r\n\twatchList: Array<WatchListType>;\r\n};\r\n\r\ntype WatchListType = {\r\n\tTitle?: string;\r\n\tPoster?: string;\r\n\tType?: string;\r\n\tYear?: string;\r\n};\r\n\r\ntype DispatchType = (action: ActionType) => void;\r\n\r\ntype ActionType = {\r\n\ttype: string;\r\n\tvalue: WatchListType;\r\n};\r\n\r\nconst initialState: StateType = localStorage.getItem('appState')\r\n\t? (JSON.parse(localStorage.getItem('appState') ?? '') as StateType)\r\n\t: {\r\n\t\t\twatchList: [],\r\n\t  };\r\n\r\nconst AppContextState = React.createContext<StateType>(initialState);\r\nconst AppContextDispatcher = React.createContext<DispatchType>(() => {});\r\n\r\nfunction appReducer(state: StateType, action: ActionType): StateType {\r\n\tlet _state: StateType;\r\n\tswitch (action.type) {\r\n\t\tcase actions.ADD_TO_WATCH_LIST:\r\n\t\t\t_state = { ...state, watchList: [...state.watchList, action.value] };\r\n\t\t\tconsole.log();\r\n\t\t\tlocalStorage.setItem('appState', JSON.stringify(_state));\r\n\t\t\treturn _state;\r\n\t\tcase actions.REMOVE_FROM_WARCH_LIST:\r\n\t\t\t_state = {\r\n\t\t\t\t...state,\r\n\t\t\t\twatchList: state.watchList.filter((movie) => movie.Title !== action.value.Title),\r\n\t\t\t};\r\n\t\t\tlocalStorage.setItem('appState', JSON.stringify(_state));\r\n\t\t\treturn _state;\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n\r\nconst AppContextProvider: React.FC<{}> = (props) => {\r\n\tconst [state, dispatch] = useReducer(appReducer, initialState);\r\n\treturn (\r\n\t\t<AppContextState.Provider value={state}>\r\n\t\t\t<AppContextDispatcher.Provider value={dispatch}>{props.children}</AppContextDispatcher.Provider>\r\n\t\t</AppContextState.Provider>\r\n\t);\r\n};\r\n\r\nconst useAppContext = (): [StateType, DispatchType] => {\r\n\treturn [useContext(AppContextState), useContext(AppContextDispatcher)];\r\n};\r\n\r\nexport { AppContextProvider, useAppContext, actions };\r\nexport type { StateType, DispatchType };\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useAppContext, actions } from '../AppContext';\r\nimport Button from '../elements/Button';\r\n\r\nconst MovieContainer = styled.div`\r\n\twidth: 1050px;\r\n\tdisplay: flex;\r\n\tmargin: 10px auto;\r\n`;\r\n\r\nconst MainInfoContainer = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n`;\r\n\r\nconst Row = styled(MainInfoContainer)``;\r\n\r\nconst Poster = styled.div`\r\n\twidth: 35%;\r\n\theight: 480px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n\twidth: 65%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nconst Text = styled.span<{ variant?: 'title' | 'info' | 'plot' }>`\r\n\tfont-size: ${(props): string => (props.variant === 'title' ? '2' : props.variant === 'info' ? '.8' : '1')}em;\r\n\tmargin: 5px 15px;\r\n\twhite-space: ${(props): string => (props.variant === 'info' ? 'nowrap' : '')};\r\n\ttext-align: justify;\r\n\topacity: ${(props): string => (props.variant === 'info' ? '.9' : '')};\r\n`;\r\n\r\nconst Movie: React.FC = () => {\r\n\tconst match = useRouteMatch<{ title: string }>();\r\n\tconst [movie, setMovie] = useState<any | 'notFound'>({});\r\n\tconst title = match.params.title;\r\n\tconst [appState, appDispatch] = useAppContext();\r\n\r\n\tconsole.log(appState);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async (): Promise<any> => {\r\n\t\t\tsetMovie({});\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get('', {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tt: title,\r\n\t\t\t\t\t\tplot: 'full',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tsetMovie(response.data ?? 'notFound');\r\n\t\t\t} catch {\r\n\t\t\t\tconsole.log('An error occurred');\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [title]);\r\n\r\n\tconst isInWatchList = (): boolean =>\r\n\t\tBoolean(appState && appState.watchList.find((m): boolean => m.Title === movie.Title));\r\n\r\n\tconst handleWatchListBtn = (): void => {\r\n\t\tconst { Title, Poster, Year, Type } = movie;\r\n\t\tappDispatch({\r\n\t\t\ttype: isInWatchList() ? actions.REMOVE_FROM_WARCH_LIST : actions.ADD_TO_WATCH_LIST,\r\n\t\t\tvalue: { Title, Poster, Year, Type },\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MovieContainer>\r\n\t\t\t{movie === 'notFound' ? (\r\n\t\t\t\t<h2>Movie not found</h2>\r\n\t\t\t) : Object.keys(movie).length !== 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<MainInfoContainer>\r\n\t\t\t\t\t\t<Poster>\r\n\t\t\t\t\t\t\t<img src={movie.Poster}></img>\r\n\t\t\t\t\t\t</Poster>\r\n\t\t\t\t\t\t<Info>\r\n\t\t\t\t\t\t\t<Text variant=\"title\">{movie.Title}</Text>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Text variant=\"info\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"far fa-clock\"></i>\r\n\t\t\t\t\t\t\t\t\t{' ' + movie.Runtime}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t<Text variant=\"info\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"far fa-calendar-check\"></i> {' ' + movie.Released}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t<Text variant=\"info\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-globe-americas\"></i>\r\n\t\t\t\t\t\t\t\t\t{' ' + movie.Country}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Text variant=\"info\">{movie.Genre}</Text>\r\n\t\t\t\t\t\t\t<Text variant=\"plot\">{movie.Plot}</Text>\r\n\t\t\t\t\t\t</Info>\r\n\t\t\t\t\t</MainInfoContainer>\r\n\t\t\t\t\t<Button onClick={handleWatchListBtn}>{isInWatchList() ? 'Remove' : 'Add to watchlist'}</Button>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Spinner animation=\"border\" />\r\n\t\t\t)}\r\n\t\t</MovieContainer>\r\n\t);\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { useAppContext } from '../AppContext';\r\nimport MoivesContainer from '../components/MoviesContainer';\r\n\r\nconst Search: React.FC = () => {\r\n\tconst [appState, appDispatch] = useAppContext();\r\n\tconst movies = appState.watchList;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MoivesContainer movies={movies.length !== 0 ? movies : 'notFound'} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './views/Home';\r\nimport Search from './views/Search';\r\nimport Movie from './views/Movie';\r\nimport WathList from './views/WatchList';\r\n\r\nconst Routs: React.FC = () => (\r\n\t<Switch>\r\n\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t<Route path=\"/search/:movie\" component={Search} />\r\n\t\t<Route path=\"/movie/:title\" component={Movie} />\r\n\t\t<Route path=\"/watchlist\" component={WathList} />\r\n\t\t<Route render={(): React.FunctionComponentElement<{}> => <h1>Page not found</h1>}></Route>\r\n\t</Switch>\r\n);\r\n\r\nexport default Routs;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchInput from '../components/SearchInput';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport WatchListBtn from './WatchListBtn';\r\nimport Logo from '../elements/Logo';\r\n\r\nconst Root = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0px;\r\n\tleft: 0px;\r\n\tz-index: 1;\r\n\twidth: 100%;\r\n\theight: 60px;\r\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n\tbackground-color: inherit;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tpadding: 0 30px;\r\n`;\r\n\r\nconst Header: React.FC = () => {\r\n\tconst location = useLocation();\r\n\r\n\tif (location.pathname === '/') {\r\n\t\treturn <div></div>;\r\n\t}\r\n\treturn (\r\n\t\t<Root>\r\n\t\t\t<Link to=\"/\">\r\n\t\t\t\t<Logo>Movie Searcher</Logo>\r\n\t\t\t</Link>\r\n\t\t\t<SearchInput inHeader />\r\n\t\t\t{location.pathname !== '/watchlist' && <WatchListBtn />}\r\n\t\t</Root>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport Routs from './routs';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Container fluid=\"md\">\n\t\t\t\t<Routs></Routs>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export type themeType = {\r\n\tprimaryColor: string;\r\n\tsecondaryColor: string;\r\n};\r\n\r\nconst theme: themeType = {\r\n\tprimaryColor: 'red',\r\n\t//secondaryColor: '#bfbfbf',\r\n\tsecondaryColor: '#c3dee0',\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\nimport { AppContextProvider } from './AppContext';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<AppContextProvider>\n\t\t\t\t<Router basename=\"/movie-searcher\">\n\t\t\t\t\t<App />\n\t\t\t\t</Router>\n\t\t\t</AppContextProvider>\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}